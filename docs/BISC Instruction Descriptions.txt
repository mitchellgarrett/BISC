-----------------
BISC Instructions
-----------------

NOP - No Operation (N)
  - Skips to next instruction by incrementing the Program Counter (PC) register by 4.
  - pc += 4

HLT - Halt (N)
  - Halts program execution.
  - PC is not incremented.

SYS arg0 (reg) - System Call
  - Executes the system call indexed by the value of arg0.

CALL arg0 (reg) - Call Function
  - The Return Address (RA) register is set to the current PC value.
  - Passes execution to the address located at arg0.
  - ra = pc
  - pc = arg0

RET - Return From Function
  - Passes execution to RA.
  - It is expected that the return value of the function is store in the Return Value (RV) register.
  - pc = ra

ADD dest (reg), arg0 (reg), arg1 (reg) - Add
  - Computes the sum of arg0 and arg1 and stores the result in dest.
  - dest = arg0 + arg1
  - pc += 4

SUB dest (reg), arg0 (reg), arg1 (reg) - Subtract
  - Computes the difference of arg0 and arg1 and stores the result in dest.
  - dest = arg0 - arg1
  - pc += 4

MUL dest (reg), arg0 (reg), arg1 (reg) - Multiply
  - Computes the product of arg0 and arg1 and stores the result in dest.
  - dest = arg0 * arg1
  - pc += 4

DIV dest (reg), arg0 (reg), arg1 (reg) - Divide
  - Computes the quotient of arg0 and arg1 and stores the result in dest.
  - dest = arg0 / arg1
  - pc += 4

MOD dest (reg), arg0 (reg), arg1 (reg) - Modulo
  - Computes the remainder of arg0 divided by arg1 and stores the result in dest.
  - dest = arg0 % arg1
  - pc += 4

NEG dest (reg), arg0 (reg) - Negate
  - Computes the arithmetic negation of arg0
  - dest = arg0 * -1
  - pc += 4

NOT dest (reg), arg0 (reg) - Not
  - Computes the logical negation of arg0.
  - if arg0 == 0
  -   dest = 1
  - else
  -   dest = 0
  - pc += 4

INV dest (reg), arg0 (reg) - Invert
  - Inverts all of the bits in arg0.
  - dest = invert_bits(arg0)
  - pc += 4